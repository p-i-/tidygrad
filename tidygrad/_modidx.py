# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/tidygrad',
                'doc_host': 'https://xl0.github.io',
                'git_url': 'https://github.com/xl0/tidygrad',
                'lib_path': 'tidygrad'},
  'syms': { 'tidygrad.functional': { 'tidygrad.functional.BCE_loss': ('functional.html#bce_loss', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Dropout': ('functional.html#dropout', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Dropout.__init__': ('functional.html#dropout.__init__', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Dropout.backward': ('functional.html#dropout.backward', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Relu': ('functional.html#relu', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Relu.__init__': ('functional.html#relu.__init__', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Relu.backward': ('functional.html#relu.backward', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Sigmoid': ('functional.html#sigmoid', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Sigmoid.__init__': ('functional.html#sigmoid.__init__', 'tidygrad/functional.py'),
                                     'tidygrad.functional.Sigmoid.backward': ('functional.html#sigmoid.backward', 'tidygrad/functional.py'),
                                     'tidygrad.functional.dropout': ('functional.html#dropout', 'tidygrad/functional.py'),
                                     'tidygrad.functional.relu': ('functional.html#relu', 'tidygrad/functional.py'),
                                     'tidygrad.functional.sigmoid': ('functional.html#sigmoid', 'tidygrad/functional.py')},
            'tidygrad.optim': { 'tidygrad.optim.Adam': ('optim.html#adam', 'tidygrad/optim.py'),
                                'tidygrad.optim.Adam.__init__': ('optim.html#adam.__init__', 'tidygrad/optim.py'),
                                'tidygrad.optim.Adam.step': ('optim.html#adam.step', 'tidygrad/optim.py'),
                                'tidygrad.optim.Optimizer': ('optim.html#optimizer', 'tidygrad/optim.py'),
                                'tidygrad.optim.Optimizer.__init__': ('optim.html#optimizer.__init__', 'tidygrad/optim.py'),
                                'tidygrad.optim.Optimizer.step': ('optim.html#optimizer.step', 'tidygrad/optim.py'),
                                'tidygrad.optim.Optimizer.zero_grad': ('optim.html#optimizer.zero_grad', 'tidygrad/optim.py'),
                                'tidygrad.optim.SGD': ('optim.html#sgd', 'tidygrad/optim.py'),
                                'tidygrad.optim.SGD.__init__': ('optim.html#sgd.__init__', 'tidygrad/optim.py'),
                                'tidygrad.optim.SGD.step': ('optim.html#sgd.step', 'tidygrad/optim.py')},
            'tidygrad.tensor': { 'tidygrad.tensor.Add': ('tensor.html#add', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Add.__init__': ('tensor.html#add.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Add.backward': ('tensor.html#add.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.BaseOp': ('tensor.html#baseop', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.BaseOp.__init__': ('tensor.html#baseop.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.BaseOp.__repr__': ('tensor.html#baseop.__repr__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.BinaryElementwiseOp': ('tensor.html#binaryelementwiseop', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.BinaryElementwiseOp.__init__': ( 'tensor.html#binaryelementwiseop.__init__',
                                                                                   'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Broadcast': ('tensor.html#broadcast', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Broadcast.__init__': ('tensor.html#broadcast.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Broadcast.backward': ('tensor.html#broadcast.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.ExpLog': ('tensor.html#explog', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.ExpLog.__init__': ('tensor.html#explog.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.ExpLog.backward': ('tensor.html#explog.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Load': ('tensor.html#load', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Load.__init__': ('tensor.html#load.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Log': ('tensor.html#log', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Log.__init__': ('tensor.html#log.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Log.backward': ('tensor.html#log.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Matmul': ('tensor.html#matmul', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Matmul.__init__': ('tensor.html#matmul.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Matmul.backward': ('tensor.html#matmul.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Mul': ('tensor.html#mul', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Mul.__init__': ('tensor.html#mul.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Mul.backward': ('tensor.html#mul.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Neg': ('tensor.html#neg', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Neg.__init__': ('tensor.html#neg.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Neg.backward': ('tensor.html#neg.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sub': ('tensor.html#sub', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sub.__init__': ('tensor.html#sub.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sub.backward': ('tensor.html#sub.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sum': ('tensor.html#sum', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sum.__init__': ('tensor.html#sum.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Sum.backward': ('tensor.html#sum.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor': ('tensor.html#tensor', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__add__': ('tensor.html#tensor.__add__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__init__': ('tensor.html#tensor.__init__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__mul__': ('tensor.html#tensor.__mul__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__neg__': ('tensor.html#tensor.__neg__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__repr__': ('tensor.html#tensor.__repr__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.__sub__': ('tensor.html#tensor.__sub__', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.add': ('tensor.html#tensor.add', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.backward': ('tensor.html#tensor.backward', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.broadcast': ('tensor.html#tensor.broadcast', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.log': ('tensor.html#tensor.log', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.mmul': ('tensor.html#tensor.mmul', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.mul': ('tensor.html#tensor.mul', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.neg': ('tensor.html#tensor.neg', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.shape': ('tensor.html#tensor.shape', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.sub': ('tensor.html#tensor.sub', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.sum': ('tensor.html#tensor.sum', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.Tensor.zero_grad': ('tensor.html#tensor.zero_grad', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.UnaryElementwiseOp': ('tensor.html#unaryelementwiseop', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.UnaryElementwiseOp.__init__': ( 'tensor.html#unaryelementwiseop.__init__',
                                                                                  'tidygrad/tensor.py'),
                                 'tidygrad.tensor.calculate_target_shape': ('tensor.html#calculate_target_shape', 'tidygrad/tensor.py'),
                                 'tidygrad.tensor.maybe_broadcast_elementwise': ( 'tensor.html#maybe_broadcast_elementwise',
                                                                                  'tidygrad/tensor.py'),
                                 'tidygrad.tensor.maybe_broadcast_matmul': ('tensor.html#maybe_broadcast_matmul', 'tidygrad/tensor.py')},
            'tidygrad.training': { 'tidygrad.training.DataLoader': ('training.html#dataloader', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoader.__init__': ('training.html#dataloader.__init__', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoader.__iter__': ('training.html#dataloader.__iter__', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoader.__len__': ('training.html#dataloader.__len__', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoader.__next__': ('training.html#dataloader.__next__', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoaders': ('training.html#dataloaders', 'tidygrad/training.py'),
                                   'tidygrad.training.DataLoaders.__init__': ('training.html#dataloaders.__init__', 'tidygrad/training.py'),
                                   'tidygrad.training.Dataset': ('training.html#dataset', 'tidygrad/training.py'),
                                   'tidygrad.training.Dataset.__getitem__': ('training.html#dataset.__getitem__', 'tidygrad/training.py'),
                                   'tidygrad.training.Dataset.__len__': ('training.html#dataset.__len__', 'tidygrad/training.py'),
                                   'tidygrad.training.Dataset.collate_fn': ('training.html#dataset.collate_fn', 'tidygrad/training.py'),
                                   'tidygrad.training.Dataset.shuffle': ('training.html#dataset.shuffle', 'tidygrad/training.py'),
                                   'tidygrad.training.DictLoggerCallback': ('training.html#dictloggercallback', 'tidygrad/training.py'),
                                   'tidygrad.training.DictLoggerCallback.__init__': ( 'training.html#dictloggercallback.__init__',
                                                                                      'tidygrad/training.py'),
                                   'tidygrad.training.DictLoggerCallback.log': ( 'training.html#dictloggercallback.log',
                                                                                 'tidygrad/training.py'),
                                   'tidygrad.training.DictLoggerCallback.post_calc_loss': ( 'training.html#dictloggercallback.post_calc_loss',
                                                                                            'tidygrad/training.py'),
                                   'tidygrad.training.DictLoggerCallback.post_epoch': ( 'training.html#dictloggercallback.post_epoch',
                                                                                        'tidygrad/training.py'),
                                   'tidygrad.training.Learner': ('training.html#learner', 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.__init__': ('training.html#learner.__init__', 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_all_batches': ( 'training.html#learner.do_all_batches',
                                                                                 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_batch_backward': ( 'training.html#learner.do_batch_backward',
                                                                                    'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_batch_forward': ( 'training.html#learner.do_batch_forward',
                                                                                   'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_calc_loss': ('training.html#learner.do_calc_loss', 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_epoch': ('training.html#learner.do_epoch', 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.do_fit': ('training.html#learner.do_fit', 'tidygrad/training.py'),
                                   'tidygrad.training.Learner.fit': ('training.html#learner.fit', 'tidygrad/training.py'),
                                   'tidygrad.training.add_callbacks': ('training.html#add_callbacks', 'tidygrad/training.py'),
                                   'tidygrad.training.one_hot_encode_batch': ( 'training.html#one_hot_encode_batch',
                                                                               'tidygrad/training.py')},
            'tidygrad.utils.datasets': { 'tidygrad.utils.datasets.download_file': ( 'utils.datasets.html#download_file',
                                                                                    'tidygrad/utils/datasets.py'),
                                         'tidygrad.utils.datasets.load_mnist': ( 'utils.datasets.html#load_mnist',
                                                                                 'tidygrad/utils/datasets.py')},
            'tidygrad.utils.grad_check': { 'tidygrad.utils.grad_check.grad_check': ( 'utils.grad_check.html#grad_check',
                                                                                     'tidygrad/utils/grad_check.py')}}}
