# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_utils.ipynb.

# %% auto 0
__all__ = ['grad_check']

# %% ../nbs/00_utils.ipynb 3
from .tensor import Tensor
import numpy as np

# %% ../nbs/00_utils.ipynb 4
def grad_check(parameters: tuple, nn, eps=10e-4):
    for p in reversed(parameters):
        slow_grad = np.zeros_like(p.grad)
        for idx, _ in np.ndenumerate(p.data):
            loss = nn(*parameters)

            old_val = p.data[idx]
            p.data[idx] = old_val + eps

            loss_plus_h = nn(*parameters)
            slow_grad[idx] = (loss_plus_h.data - loss.data) / eps

        if not np.allclose(slow_grad, p.grad, atol=1e-2):
            raise ValueError(
                f"Gradient check failed for {p.name}:\nSlow grad:\n{slow_grad}\nGrad:\n{p.grad}"
            )
